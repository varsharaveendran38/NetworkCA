---
- name: Install Docker and Deploy Web App
  hosts: ec2_instances
  become: yes
  gather_facts: yes
  tasks:
    - name: Update package list
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - python3-pip
          - python3-dev
          - python3-venv
        state: present

    - name: Ensure virtual environment directory exists
      file:
        path: /home/ubuntu/myenv
        state: directory

    - name: Create virtual environment for Python
      command: python3 -m venv /home/ubuntu/myenv
      when: not ansible_facts['os_family'] == 'RedHat'

    - name: Install Docker Python module in virtual environment
      pip:
        executable: /home/ubuntu/myenv/bin/pip
        name: docker

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Create app directory if it doesn't exist
      file:
        path: /home/ubuntu/app
        state: directory

    - name: Copy Dockerfile to EC2 instance
      copy:
        src: /home/varsha/Dockerfile
        dest: /home/ubuntu/app/Dockerfile

    - name: Copy webapp.html to EC2 instance
      copy:
        src: /mnt/c/Users/hp/OneDrive/Desktop/TerraformCA/webapp.html
        dest: /home/ubuntu/app/webapp.html

    - name: Build Docker Image
      docker_image:
        name: myapp
        source: build
        build:
          path: /home/ubuntu/app/
        state: present

    - name: Stop and remove existing container if it exists
      docker_container:
        name: myapp_container
        state: absent
        force_kill: yes

    - name: Run Docker Container
      docker_container:
        name: myapp_container
        image: myapp
        state: started
        restart_policy: always
        published_ports:
          - "8080:80"

    - name: Check Docker container status
      command: docker ps
      register: docker_ps
      changed_when: false

    - name: Display Docker container status
      debug:
        msg: "{{ docker_ps.stdout }}"









